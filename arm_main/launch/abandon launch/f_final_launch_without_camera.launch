<launch>
	<param name="robot_description" command="cat $(find swiftpro)/urdf/pro_model.xacro" />
	<param name="use_gui" value= "False" />







	<!--适用于固定场景位置,不进行识别，
	    直接给物块在摄像头中的坐标（单位：像素），进行Solve-->







	<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
		<param name="video_device" value="/dev/video0" />
		<param name="image_width" value="1280" />
		<param name="image_height" value="720" />
		<param name="pixel_format" value="yuyv" />
		<param name="camera_frame_id" value="usb_cam" />
		<param name="io_method" value="mmap"/>
		<param name="camera_info_url" type="string" value="file://$(find usb_cam)/camera_calibration.yaml" />
	</node>

	<node name="image_proc_node" pkg="image_proc" type="image_proc"  ns="/usb_cam" launch-prefix="xterm -e"/> 

	<node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
		<remap from="image" to="/usb_cam/image_rect_color"/>
		<param name="autosize" value="true" />
	</node>



	<node name="swiftpro_write_node" pkg="swiftpro" type="swiftpro_write_node" output="screen"/>

	<node name="swiftpro_rviz_node" pkg="swiftpro" type="swiftpro_rviz_node" output="screen"/>

	<node name="serial_node" pkg="rosserial_python"  type="serial_node.py" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyACM1"/>
	</node>
	
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <node name="main_node" pkg="arm_main" type="main" output="screen" />
	
    <!--node name="coordinate_publisher" pkg="arm_main" type="coordinate_publisher.py" /-->
	<!--node name="coordinate_publisher_node" pkg="arm_main" type="coordinate_publisher_node.py" /-->
	<node name="f_coordinate_publisher_node" pkg="arm_main" type="f_coordinate_publisher_node.py" />

	<!--node name="swiftpro_moveit_node" pkg="swiftpro" type="swiftpro_moveit_node"/-->
	<!--node name="rviz" pkg="rviz" type="rviz" /-->


</launch>